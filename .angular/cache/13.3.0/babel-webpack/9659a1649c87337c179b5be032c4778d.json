{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nlet ProfileComponent = class ProfileComponent {\n  constructor(afAuth, afs, route, auth, afStorage) {\n    this.afAuth = afAuth;\n    this.afs = afs;\n    this.route = route;\n    this.auth = auth;\n    this.afStorage = afStorage;\n    this.loading = false;\n    this.uid = this.route.snapshot.paramMap.get('id');\n    this.downloadURL = this.afStorage.ref(`users/${this.uid}/profile-image`).getDownloadURL();\n  }\n\n  ngOnInit() {\n    this.itemDoc = this.afs.doc(`users/${this.uid}`);\n    this.item = this.itemDoc.valueChanges();\n  }\n\n  onSubmit(ngForm) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.loading = true;\n      const {\n        email,\n        name,\n        address,\n        city,\n        state,\n        zip,\n        ip,\n        phone,\n        specialty\n      } = ngForm.form.getRawValue();\n      const userProfile = {\n        uid: this.uid,\n        email,\n        name,\n        address,\n        city,\n        state,\n        zip,\n        ip,\n        phone,\n        specialty\n      };\n\n      try {\n        yield this.auth.updateUserDocument(userProfile);\n      } catch (error) {\n        console.log(error.message);\n        this.error = error.message;\n      }\n\n      this.loading = false;\n    });\n  }\n\n  fileChange(event) {\n    this.downloadURL = null;\n    this.error = null; // get the file\n\n    const file = event.target.files[0]; // create the file refrence\n\n    const filePath = `users/${this.uid}/profile-image`;\n    const fileRef = this.afStorage.ref(filePath); // upload and store the task\n\n    const task = this.afStorage.upload(filePath, file);\n    task.catch(error => this.error = error.message); // observer percentage changes\n\n    this.uploadProgress = task.percentageChanges(); // get notified when the download URL is avaialbe\n\n    task.snapshotChanges().pipe(finalize(() => {\n      this.downloadURL = fileRef.getDownloadURL();\n    })).subscribe();\n  }\n\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})], ProfileComponent);\nexport { ProfileComponent };","map":null,"metadata":{},"sourceType":"module"}