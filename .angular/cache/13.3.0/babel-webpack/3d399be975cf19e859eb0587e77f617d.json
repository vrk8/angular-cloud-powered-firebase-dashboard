{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nimport * as i3 from \"@angular/fire/compat/firestore\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router, afAuth, afs) {\n      this.router = router;\n      this.afAuth = afAuth;\n      this.afs = afs;\n    }\n\n    logout() {\n      this.afAuth.signOut();\n      this.router.navigate(['']);\n    }\n\n    isLoggedIn() {\n      return !!this.afAuth.currentUser;\n    }\n\n    createUserDocument() {\n      return __awaiter(this, void 0, void 0, function* () {\n        // get the current user\n        const user = yield this.afAuth.currentUser; // create the object with new data\n\n        const userProfile = {\n          uid: user.uid,\n          email: user.email,\n          name: user.displayName,\n          address: '',\n          city: '',\n          state: '',\n          zip: '',\n          phone: '',\n          specialty: '',\n          ip: ''\n        }; // write to Cloud Firestore\n\n        return this.afs.doc(`users/${user.uid}`).set(userProfile);\n      });\n    }\n\n    updateUserDocument(userProfile) {\n      return this.afs.doc(`users/${userProfile.uid}`).update(userProfile);\n    }\n\n    routeOnLogin() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const user = this.afAuth.auth.currentUser;\n        const token = yield user.getIdTokenResult();\n\n        if (token.claims.admin) {\n          this.router.navigate(['/users']);\n        } else {\n          this.router.navigate([`/profile/${user.uid}`]);\n        }\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFireAuth), i0.ɵɵinject(i3.AngularFirestore));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}